<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wolfking.jeesite.modules.fi.dao.EngineerChargeDao">
	
	<insert id="insert">
		INSERT INTO fi_engineercharge(
			id,
			order_id,
			order_no,
			order_detail_id,
			customer_id,
			service_point_id,
			engineer_id,
			product_id,
			service_type_id,
			qty,
			service_charge,
			express_charge,
			travel_charge,
			material_charge,
			other_charge,
			service_times,
			payment_type,
			status,
			charge_order_type,
			tax_fee_rate,
			info_fee_rate,
			create_by,
			create_date,
			remarks,
			quarter
		) VALUES (
			#{id},
			#{orderId},
			#{orderNo},
			#{orderDetailId},
			#{customerId},
			#{servicePoint.id},
			#{engineer.id},
			#{product.id},
			#{serviceType.id},
			#{qty},
			#{serviceCharge},
			#{expressCharge},
			#{travelCharge},
			#{materialCharge},
			#{otherCharge},
			#{serviceTimes},
			#{paymentType},
			#{status},
			#{chargeOrderType},
			#{taxFeeRate},
			#{infoFeeRate},
			#{createBy.id},
			#{createDate},
			#{remarks},
			#{quarter}
		)
	</insert>
	
	<update id="update">
		UPDATE fi_engineercharge SET
			update_by = #{updateBy.id},
			update_date = #{updateDate}, 
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE fi_engineercharge SET
			del_flag = #{DEL_FLAG_DELETE},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>

	<update id="closeSingle">
		UPDATE fi_engineercharge SET
			status = 20
		WHERE id = #{id}
	</update>

	<update id="close">
		UPDATE fi_engineercharge SET
			status = 20,
			update_by = #{updateById},
			update_date = NOW()
		WHERE id IN
		<foreach item="chargeId" index="index" collection="chargeIds" open="(" separator="," close=")">
			#{chargeId}
		</foreach>
	</update>

	<select id="get" resultType="EngineerCharge">
		SELECT
			id,
			order_id,
			order_no,
			order_detail_id,
			customer_id AS "customerId",
			service_point_id as 'servicePoint.id',
			engineer_id	as 'engineer.id',
			product_id as 'product.id',
			service_type_id as 'serviceType.id',
			qty,
			service_charge,
			express_charge,
			travel_charge,
			material_charge,
			other_charge,
			service_times,
			payment_type,
			status,
			charge_order_type,
			tax_fee_rate,
			info_fee_rate,
			create_by as 'createBy.id',
			create_date,
			remarks,
			quarter
		FROM
			fi_engineercharge
		WHERE
			id = #{id}
		AND del_flag = 0
	</select>

	<select id="findList" parameterType="EngineerCharge" resultType="EngineerCharge">
		SELECT
			id,
			order_id,
			order_no,
			order_detail_id,
			service_point_id as 'servicePoint.id',
			engineer_id	as 'engineer.id',
			product_id as 'product.id',
			service_type_id as 'serviceType.id',
			qty,
			service_charge,
			express_charge,
			travel_charge,
			material_charge,
			other_charge,
			service_times,
			payment_type,
			status,
			charge_order_type,
			tax_fee_rate,
			info_fee_rate,
			create_by as 'createBy.id',
			create_date,
			remarks,
			quarter
		FROM
			fi_engineercharge
		<where>
			<if test="orderId !=null">
				AND order_id=#{orderId}
			</if>
			<if test="chargeOrderType !=null">
				AND charge_order_type=#{chargeOrderType}
			</if>
			<if test="servicePoint != null and servicePoint.id != null">
				AND service_point_id=#{servicePoint.id}
			</if>
			<if test="status !=null">
				AND status=#{status}
			</if>
			AND del_flag = 0
		</where>
		LIMIT 5000
	</select>

	<select id="findAllList" resultType="EngineerCharge">
		SELECT
			id,
			order_id,
			order_no,
			order_detail_id,
			service_point_id as 'servicePoint.id',
			engineer_id	as 'engineer.id',
			product_id as 'product.id',
			service_type_id as 'serviceType.id',
			qty,
			service_charge,
			express_charge,
			travel_charge,
			material_charge,
			other_charge,
			service_times,
			payment_type,
			status,
			charge_order_type,
			tax_fee_rate,
			info_fee_rate,
			create_by as 'createBy.id',
			create_date,
			remarks,
			quarter
		FROM
			fi_engineercharge
		WHERE
			del_flag = 0
		LIMIT 50000
	</select>

	<select id="getNotExistCurrencyList" resultType="EngineerCharge">
		SELECT
		  	fec.id,
			fec.order_id,
			fec.order_no,
			fec.order_detail_id,
			fec.service_point_id as 'servicePoint.id',
			fec.engineer_id	as 'engineer.id',
			fec.product_id as 'product.id',
			fec.service_type_id as 'serviceType.id',
			fec.qty,
			fec.service_charge,
			fec.express_charge,
			fec.travel_charge,
			fec.material_charge,
			fec.other_charge,
			fec.service_times,
			fec.payment_type,
			fec.status,
			fec.charge_order_type,
			fec.create_by as 'createBy.id',
			fec.create_date,
			fec.remarks,
			fec.quarter
		FROM
		  fi_engineercharge fec
		  LEFT JOIN fi_engineercurrency fecc
			ON fec.service_point_id = fecc.service_point_id
			AND fec.order_no = fecc.currency_no
		WHERE fecc.id IS NULL
		AND fec.quarter = '20173'
		ORDER BY fec.service_point_id,fec.id
		LIMIT 1000;
	</select>
	
</mapper>
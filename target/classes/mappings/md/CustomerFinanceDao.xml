<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wolfking.jeesite.modules.md.dao.CustomerFinanceDao">
    <sql id="customerFinanceColumns">
        a.id,
        a.payment_type,
        a.rebate_rate,
        a.LEVEL,
        a.lock_flag,
        a.public_bank,
        a.public_account,
        a.public_name,
        a.public_branch,
        a.private_bank,
        a.private_account,
        a.private_name,
        a.private_branch,
        a.credit,
        a.credit_flag,
        a.block_amount,
        a.order_payment_amount,
        a.refund_amount,
        a.replenish_amount,
        a.balance,
        a.prepaid_amount,
        a.total_amount,
        a.unit,
        a.create_by,
        a.create_date,
        a.update_by,
        a.update_date,
        a.remarks,
        a.del_flag,
        a.taxpayer_code,
        a.deposit,
        a.payment_type as "paymentType.value",
        '' as "paymentType.label",
        a.invoice_flag
    </sql>

    <sql id="customerFinanceJoins">
    </sql>

    <select id="get" resultType="CustomerFinance">
        select <include refid="customerFinanceColumns"/>
        from md_customer_finance a
        where a.id =#{id}
    </select>

    <select id="getForAddOrder" resultType="CustomerFinance">
        /*#mycat:db_type=master*/
        SELECT
            a.lock_flag,
            a.credit,
            a.credit_flag,
            a.block_amount,
            a.balance,
            a.payment_type as "paymentType.value"
        FROM
            md_customer_finance a
        WHERE
            a.id =#{id}
    </select>

    <select id="getAmounts" resultType="CustomerFinance">
        /*#mycat:db_type=master*/
        SELECT
            a.id,
            a.lock_flag,
            a.credit,
            a.credit_flag,
            a.block_amount,
            a.order_payment_amount,
            a.refund_amount,
            a.replenish_amount,
            a.balance,
            a.prepaid_amount,
            a.total_amount
        FROM
            md_customer_finance a
        WHERE
            a.id =#{id}
    </select>

    <!--根据用ID列表获取客户冻结金额-->
    <select id="getBlockAmountByIds" resultType="CustomerFinance">
        SELECT
           id,
           block_amount
        FROM
           md_customer_finance
        <if test="ids != null and ids.size > 0">
            WHERE id IN
            <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>

    <!--根据用ID列表获取客户余额-->
    <select id="getBalanceByIds" resultType="CustomerFinance">
        SELECT
            id,
            balance
        FROM
            md_customer_finance
        <if test="ids != null and ids.size > 0">
            WHERE id IN
            <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
    </select>

    <!--获得信用额度和押金-->
    <!--//mark on 2020-2-11
    <select id="getCreditAndDeposits" resultType="CustomerFinance">
        SELECT
            f.id,
            f.credit,
            f.deposit
        FROM
            md_customer_finance f
            <if test="customerName != null and customerName != ''.trim()">
                inner join md_customer c on f.id = c.id
            </if>
        <where>
            <if test="customerName != null and customerName != ''.trim()">
                AND c.name like CONCAT('%', #{customerName}, '%')
            </if>
            <if test="paymentType != null and paymentType > 0 ">
                AND f.payment_type = #{paymentType}
            </if>
        </where>
    </select>
    -->

<!--    <select id="getCreditAndDepositsWithOutCustomer" resultType="CustomerFinance">-->
<!--        SELECT-->
<!--            f.id,-->
<!--            f.credit,-->
<!--            f.deposit-->
<!--        FROM-->
<!--            md_customer_finance f-->
<!--        <where>-->
<!--            <if test="customerId != null">-->
<!--                AND f.id = #{customerId}-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO md_customer_finance
        (
            id,
            payment_type,
            rebate_rate,
            LEVEL,
            lock_flag,
            public_bank,
            public_account,
            public_name,
            public_branch,
            private_bank,
            private_account,
            private_name,
            private_branch,
            credit,
            credit_flag,
            block_amount,
            order_payment_amount,
            refund_amount,
            replenish_amount,
            balance,
            prepaid_amount,
            total_amount,
            unit,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag,
            taxpayer_code,
            deposit,
            invoice_flag
        )
        VALUES
        (
            #{id},
            #{paymentType.value},
            #{rebateRate},
            #{level},
            #{lockFlag},
            #{publicBank},
            #{publicAccount},
            #{publicName},
            #{publicBranch},
            #{privateBank},
            #{privateAccount},
            #{privateName},
            #{privateBranch},
            #{credit},
            #{creditFlag},
            #{blockAmount},
            #{ordePaymentAmount},
            #{refundAmount},
            #{replenishAmount},
            #{balance},
            #{prepaidAmount},
            #{totalAmount},
            #{unit},
            #{createBy.id},
            #{createDate},
            #{updateBy.id},
            #{updateDate},
            #{remarks},
            #{delFlag},
            #{taxpayerCode},
            #{deposit},
            #{invoiceFlag}
        )
    </insert>

    <update id="update">
        UPDATE md_customer_finance
          SET
            payment_type = #{paymentType.value},
            rebate_rate = #{rebateRate},
            LEVEL = #{level},
            lock_flag = #{lockFlag},
            public_bank = #{publicBank},
            public_account = #{publicAccount},
            public_name = #{publicName},
            public_branch = #{publicBranch},
            private_bank = #{privateBank},
            private_account = #{privateAccount},
            private_name = #{privateName},
            private_branch = #{privateBranch},
            credit = #{credit},
            credit_flag = #{creditFlag},
            unit = #{unit},
            update_by = #{updateBy.id},
            update_date = #{updateDate},
            remarks = #{remarks},
            del_flag = #{delFlag},
            taxpayer_code = #{taxpayerCode},
            deposit = #{deposit},
            invoice_flag = #{invoiceFlag}
          WHERE
            id =#{id}
    </update>

    <update id="updateBalance">
        update md_customer_finance
        set
            balance = balance + #{transactionAmount},
            <if test="transactionAmount != null and transactionAmount>0" >
                prepaid_amount = prepaid_amount + #{transactionAmount},
            </if>
            update_by =#{updateBy.id},
            update_date =now()
        where id =#{id}
    </update>

    <update id="updateBalanceForRecharge">
        update md_customer_finance
        set
            balance = balance + #{transactionAmount}
            <if test="transactionAmount != null and transactionAmount>0" >
            ,prepaid_amount = prepaid_amount + #{transactionAmount}
            </if>
        where id = #{id}
    </update>

    <!-- 增减冻结金额 -->
    <update id="incBlockAmount">
        update md_customer_finance
        set
          block_amount = block_amount + #{blockAmount} + #{orderAmount},
          update_by = #{updateBy},
          update_date = #{updateDate}
        where id =#{id}
    </update>

    <!-- 当前余额 -->
    <select id="getBalanceAmount" resultType="java.lang.Double">
        select balance
        from md_customer_finance
        where id = #{id}
    </select>

    <update id="deleteById">
        UPDATE md_customer_finance
        SET   update_by = #{updateBy},
        update_date = NOW(),
        del_flag = 1
        WHERE
        id = #{id}
    </update>

    <update id="updateBalanceFromInvoice" parameterType="CustomerFinance">
        UPDATE
            md_customer_finance
        SET
            balance = balance + #{balance}
        WHERE
            id = #{id}
    </update>

    <update id="updateAmountFromInvoice" parameterType="CustomerFinance">
        UPDATE
            md_customer_finance
        SET
            block_amount = block_amount + #{blockAmount},
            total_amount = total_amount + #{totalAmount},
            update_by = #{updateBy.id},
            update_date = #{updateDate}
        WHERE
            id = #{id}
    </update>

    <update id="updatePrivate">
        UPDATE md_customer_finance
        SET
        private_bank = #{privateBank},
        private_account = #{privateAccount},
        private_name = #{privateName},
        private_branch = #{privateBranch},
        update_by = #{updateBy.id},
        update_date = #{updateDate}
        WHERE
        id =#{id}
    </update>

    <update id="updatePublic">
        UPDATE md_customer_finance
        SET
        public_bank = #{publicBank},
        public_account = #{publicAccount},
        public_name = #{publicName},
        public_branch = #{publicBranch},
        update_by = #{updateBy.id},
        update_date = #{updateDate}
        WHERE
        id =#{id}
    </update>
</mapper>